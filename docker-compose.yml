version: "3.9"

services:
  slackbot:
    build: .
    container_name: nemo_bot
    ports:
      - ${DB_PORT}:5001

    environment:
      SLACK_SIGNING_SECRET: ${SLACK_SIGNING_SECRET}
      SLACK_BOT_TOKEN: ${SLACK_BOT_TOKEN}
      SLACK_APP_TOKEN: ${SLACK_APP_TOKEN}
      SLACK_NOTIFICATION_CHANNEL: ${SLACK_NOTIFICATION_CHANNEL}
      PORT: ${DB_PORT}
      GOOGLE_CALENDAR_API_KEY: ${GOOGLE_CALENDAR_API_KEY}
      GOOGLE_CALENDAR_ID: ${GOOGLE_CALENDAR_ID}
      SANITY_PROJECT_ID: ${SANITY_PROJECT_ID}
      SANITY_DATA_SET: ${SANITY_DATA_SET}
      AXIOM_API_TOKEN: ${AXIOM_API_TOKEN}

  mongo_db1:
    image: mongo
    container_name: mongo_db_1
    command:
      - mongod --replSet myReplicaSet --bind_ip localhost,mongo_db_1
      - mongosh --eval rs.initiate({})
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: nemo
    volumes:
      - nemo_volume:/data/db
    networks:
      - mongo_db_cluster

  mongo_db2:
    image: mongo
    container_name: mongo_db_2
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo_db_2
    restart: always
    ports:
      - 27018:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: nemo
    volumes:
      - nemo_volume:/data/db
    networks:
      - mongo_db_cluster

volumes:
  nemo_volume: ~

networks:
  mongo_db_cluster:
    name: mongodb_network
